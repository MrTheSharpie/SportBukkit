From 1cfd436aa7e253f4b275a4514068d3c8d040062b Mon Sep 17 00:00:00 2001
From: Steve Anton <anxuiz.nx@gmail.com>
Date: Sat, 13 Apr 2013 10:50:21 -0700
Subject: [PATCH] BungeeCord Support

- Allows BungeeCord to set the players real IP address very early in the login process, so that the BungeeCord proxy IP is never even seen by a plugin.
- Ported from Spigot

diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index f8bac48..a01e3aa 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -71,6 +71,25 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 this.b.close(chatcomponenttext);
             } else {
                 this.b.a((PacketListener) (new LoginListener(this.a, this.b)));
+                // CraftBukkit Start
+                if (this.a.server.bungee) {
+                    String[] split = packethandshakinginsetprotocol.b.split("\00");
+                    if (split.length >= 3) {
+                        packethandshakinginsetprotocol.b = split[0];
+                        b.j = new java.net.InetSocketAddress(split[1], ((java.net.InetSocketAddress) b.getSocketAddress()).getPort());
+                        b.spoofedUUID = com.mojang.util.UUIDTypeAdapter.fromString(split[2]);
+
+                        if(split.length == 4) {
+                            b.spoofedProfile = this.a.server.gson.fromJson(split[3], com.mojang.authlib.properties.Property[].class);
+                        }
+                    } else {
+                        chatcomponenttext = new ChatComponentText("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
+                        this.b.handle(new PacketLoginOutDisconnect(chatcomponenttext));
+                        this.b.close(chatcomponenttext);
+                        return;
+                    }
+                }
+                // CraftBukkit End
                 ((LoginListener) this.b.getPacketListener()).hostname = packethandshakinginsetprotocol.b + ":" + packethandshakinginsetprotocol.c; // CraftBukkit - set hostname
             }
             break;
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 53447ae..a1ca379 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -62,9 +62,20 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
 
     // CraftBukkit - add method
     public void initUUID() {
-        UUID uuid = UUID.nameUUIDFromBytes(("OfflinePlayer:" + this.i.getName()).getBytes(Charsets.UTF_8));
+        UUID uuid;
+        if (networkManager.spoofedUUID != null) {
+            uuid = networkManager.spoofedUUID;
+        } else {
+            uuid = UUID.nameUUIDFromBytes(("OfflinePlayer:" + this.i.getName()).getBytes(Charsets.UTF_8));
+        }
 
         this.i = new GameProfile(uuid, this.i.getName());
+
+        if (networkManager.spoofedProfile != null) {
+            for (com.mojang.authlib.properties.Property property : networkManager.spoofedProfile) {
+                this.i.getProperties().put(property.getName(), property);
+            }
+        }
     }
 
     public void b() {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 33166a3..6180363 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -31,7 +31,11 @@ public class NetworkManager extends SimpleChannelInboundHandler {
     private final EnumProtocolDirection g;
     private final Queue h = Queues.newConcurrentLinkedQueue();
     private Channel i;
-    private SocketAddress j;
+    // CraftBukkit Start
+    public SocketAddress j;
+    public java.util.UUID spoofedUUID;
+    public com.mojang.authlib.properties.Property[] spoofedProfile;
+    // CraftBukkit End
     private PacketListener k;
     private IChatBaseComponent l;
     private boolean m;
diff --git a/src/main/java/net/minecraft/server/PacketHandshakingInSetProtocol.java b/src/main/java/net/minecraft/server/PacketHandshakingInSetProtocol.java
index 97920b0..a6de986 100644
--- a/src/main/java/net/minecraft/server/PacketHandshakingInSetProtocol.java
+++ b/src/main/java/net/minecraft/server/PacketHandshakingInSetProtocol.java
@@ -11,7 +11,7 @@ public class PacketHandshakingInSetProtocol implements Packet {
 
     public void a(PacketDataSerializer packetdataserializer) {
         this.a = packetdataserializer.e();
-        this.b = packetdataserializer.c(255);
+        this.b = packetdataserializer.c(Short.MAX_VALUE); // CraftBukkit - needed to read long/fake host
         this.c = packetdataserializer.readUnsignedShort();
         this.d = EnumProtocol.a(packetdataserializer.e());
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 1f936b0..2104df3 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -162,6 +162,8 @@ public final class CraftServer implements Server {
     private final UUID invalidUserUUID = UUID.nameUUIDFromBytes("InvalidUsername".getBytes(Charsets.UTF_8));
     private final List<CraftPlayer> playerView;
     public int reloadCount;
+    public boolean bungee = false;
+    public static final com.google.gson.Gson gson = new com.google.gson.Gson();
 
     private final class BooleanWrapper {
         private boolean value = true;
@@ -235,6 +237,7 @@ public final class CraftServer implements Server {
         }
 
         saveCommandsConfig();
+        bungee = configuration.getBoolean("settings.bungeecord");
         overrideAllCommandBlockCommands = commandsConfiguration.getStringList("command-block-overrides").contains("*");
         ((SimplePluginManager) pluginManager).useTimings(configuration.getBoolean("settings.plugin-profiling"));
         monsterSpawn = configuration.getInt("spawn-limits.monsters");
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index a6c1178..78201d3 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -25,6 +25,7 @@ settings:
     query-plugins: true
     deprecated-verbose: default
     shutdown-message: Server closed
+    bungeecord: false
 spawn-limits:
     monsters: 70
     animals: 15
-- 
1.9.0

