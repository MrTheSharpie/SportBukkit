From 814d6f29921631a1633f8f6dea87a7946a1e119c Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 2 Aug 2012 17:27:40 -0700
Subject: [PATCH] Implement the affectsSpawning API


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 7eb41e1..bce163e 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -65,6 +65,7 @@ public abstract class EntityHuman extends EntityLiving {
     // CraftBukkit start
     public boolean fauxSleeping;
     public String spawnWorld = "";
+    public boolean affectsSpawning = true; // CraftBukkit
 
     @Override
     public CraftHumanEntity getBukkitEntity() {
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index f387687..9a075bb 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -423,7 +423,7 @@ public abstract class EntityInsentient extends EntityLiving {
         if (this.persistent) {
             this.aO = 0;
         } else {
-            EntityHuman entityhuman = this.world.findNearbyPlayer(this, -1.0D);
+            EntityHuman entityhuman = this.world.findNearbyPlayerWhoAffectsSpawning(this, -1.0D); // CraftBukkit
 
             if (entityhuman != null) {
                 double d0 = entityhuman.locX - this.locX;
diff --git a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
index e597d77..50db176 100644
--- a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
+++ b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
@@ -48,7 +48,7 @@ public abstract class MobSpawnerAbstract {
     private boolean g() {
         BlockPosition blockposition = this.b();
 
-        return this.a().isPlayerNearby((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, (double) this.requiredPlayerRange);
+        return this.a().isPlayerWhoAffectsSpawningNearby((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, (double) this.requiredPlayerRange);
     }
 
     public void c() {
@@ -189,7 +189,6 @@ public abstract class MobSpawnerAbstract {
         if (this.mobs.size() > 0) {
             this.a((TileEntityMobSpawnerData) WeightedRandom.a(this.a().random, this.mobs));
         }
-
         this.a(1);
     }
 
diff --git a/src/main/java/net/minecraft/server/SpawnerCreature.java b/src/main/java/net/minecraft/server/SpawnerCreature.java
index 25988d4..9924cee 100644
--- a/src/main/java/net/minecraft/server/SpawnerCreature.java
+++ b/src/main/java/net/minecraft/server/SpawnerCreature.java
@@ -33,6 +33,11 @@ public final class SpawnerCreature {
             while (iterator.hasNext()) {
                 EntityHuman entityhuman = (EntityHuman) iterator.next();
 
+                // CraftBukkit start
+                if (!entityhuman.affectsSpawning)
+                    continue;
+                // CraftBukkit end
+
                 if (!entityhuman.v()) {
                     int l = MathHelper.floor(entityhuman.locX / 16.0D);
 
@@ -130,7 +135,7 @@ public final class SpawnerCreature {
                                                 float f = (float) j3 + 0.5F;
                                                 float f1 = (float) l3 + 0.5F;
 
-                                                if (!worldserver.isPlayerNearby((double) f, (double) k3, (double) f1, 24.0D) && blockposition.c((double) f, (double) k3, (double) f1) >= 576.0D) {
+                                                if (!worldserver.isPlayerWhoAffectsSpawningNearby((double) f, (double) k3, (double) f1, 24.0D) && blockposition.c((double) f, (double) k3, (double) f1) >= 576.0D) {
                                                     if (biomemeta == null) {
                                                         biomemeta = worldserver.a(enumcreaturetype, blockposition2);
                                                         if (biomemeta == null) {
@@ -232,7 +237,6 @@ public final class SpawnerCreature {
 
                 for (int j2 = 0; j2 < i1; ++j2) {
                     boolean flag = false;
-
                     for (int k2 = 0; !flag && k2 < 4; ++k2) {
                         BlockPosition blockposition = world.r(new BlockPosition(j1, 0, k1));
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 8dde097..f82420b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -2498,6 +2498,55 @@ public abstract class World implements IBlockAccess {
         return false;
     }
 
+    // CraftBukkit start - find players with their spawning flag set
+
+    public EntityHuman findNearbyPlayerWhoAffectsSpawning(Entity entity, double radius) {
+        return this.findNearbyPlayerWhoAffectsSpawning(entity.locX, entity.locY, entity.locZ, radius);
+    }
+
+    public EntityHuman findNearbyPlayerWhoAffectsSpawning(double d0, double d1, double d2, double d3) {
+        double d4 = -1.0D;
+        EntityHuman entityhuman = null;
+
+        for (int i = 0; i < this.players.size(); ++i) {
+            EntityHuman entityhuman1 = (EntityHuman) this.players.get(i);
+            if (entityhuman1 == null || entityhuman1.dead || !entityhuman1.affectsSpawning) {
+                continue;
+            }
+
+            if (IEntitySelector.d.apply(entityhuman1)) {
+                double d5 = entityhuman1.e(d0, d1, d2);
+
+                if ((d3 < 0.0D || d5 < d3 * d3) && (d4 == -1.0D || d5 < d4)) {
+                    d4 = d5;
+                    entityhuman = entityhuman1;
+                }
+            }
+        }
+
+        return entityhuman;
+    }
+
+    public boolean isPlayerWhoAffectsSpawningNearby(double d0, double d1, double d2, double d3) {
+        for (int i = 0; i < this.players.size(); ++i) {
+            EntityHuman entityhuman = (EntityHuman) this.players.get(i);
+
+            if (!entityhuman.affectsSpawning) continue;
+
+            if (IEntitySelector.d.apply(entityhuman)) {
+                double d4 = entityhuman.e(d0, d1, d2);
+
+                if (d3 < 0.0D || d4 < d3 * d3) {
+                    return true;
+                }
+            }
+        }
+
+        return false;
+    }
+
+    // CraftBukkit end
+
     public EntityHuman a(String s) {
         for (int i = 0; i < this.players.size(); ++i) {
             EntityHuman entityhuman = (EntityHuman) this.players.get(i);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
index 0e84185..edd9537 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -347,6 +347,16 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
         return getHandle().isBlocking();
     }
 
+    @Override
+    public void setAffectsSpawning(boolean yes) {
+        getHandle().affectsSpawning = yes;
+    }
+
+    @Override
+    public boolean getAffectsSpawning() {
+        return getHandle().affectsSpawning;
+    }
+
     public boolean setWindowProperty(InventoryView.Property prop, int value) {
         return false;
     }
-- 
1.9.0

