From 43af38167ddedb6ebdf50fd41bf14e69e025e34f Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sun, 28 Sep 2014 05:48:35 -0400
Subject: [PATCH] Simple bulk block replacement


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 99d3d40..b86ab48 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -11,12 +11,14 @@ import net.minecraft.server.WorldChunkManager;
 import net.minecraft.server.WorldServer;
 
 import org.bukkit.Chunk;
+import org.bukkit.Material;
 import org.bukkit.World;
 import org.bukkit.block.Block;
 import org.bukkit.block.BlockState;
 import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.entity.Entity;
 import org.bukkit.ChunkSnapshot;
+import org.bukkit.material.MaterialData;
 
 public class CraftChunk implements Chunk {
     private WeakReference<net.minecraft.server.Chunk> weakChunk;
@@ -297,6 +299,45 @@ public class CraftChunk implements Chunk {
         return new CraftChunkSnapshot(x, z, world.getName(), world.getFullTime(), blockIDs, blockData, skyLight, emitLight, empty, new int[256], biome, biomeTemp, biomeRain);
     }
 
+    private int replaceMaterial(Material original, byte originalData, MaterialData replacement) {
+        if(!original.isBlock()) throw new IllegalArgumentException(original + " is not a block");
+
+        net.minecraft.server.Chunk chunk = this.getHandle();
+        net.minecraft.server.Block nmsOriginal = net.minecraft.server.Block.getById(original.getId());
+        net.minecraft.server.Block nmsReplacement = net.minecraft.server.Block.getById(replacement.getItemTypeId());
+        int replacementData = replacement.getData();
+        int count = 0;
+
+        for(ChunkSection section : chunk.getSections()) {
+            if(section != null) {
+                for(int x = 0; x < 16; x++) {
+                    for(int y = 0; y < 16; y++) {
+                        for(int z = 0; z < 16; z++) {
+                            if((originalData < 0 || originalData == section.getData(x, y, z)) && section.getTypeId(x, y, z) == nmsOriginal) {
+                                chunk.f(x, y + section.getYPosition(), z); // remove the tile entity
+                                section.setTypeId(x, y, z, nmsReplacement);
+                                section.setData(x, y, z, replacementData);
+                                count++;
+                            }
+                        }
+                    }
+                }
+            }
+        }
+
+        return count;
+    }
+
+    @Override
+    public int replaceMaterial(Material original, MaterialData replacement) {
+        return this.replaceMaterial(original, (byte) -1, replacement);
+    }
+
+    @Override
+    public int replaceMaterial(MaterialData original, MaterialData replacement) {
+        return this.replaceMaterial(original.getItemType(), original.getData(), replacement);
+    }
+
     private static float[] getTemperatures(WorldChunkManager chunkmanager, int chunkX, int chunkZ) {
         BiomeBase[] biomes = chunkmanager.getBiomes(null, chunkX, chunkZ, 16, 16);
         float[] temps = new float[biomes.length];
-- 
1.8.5.2 (Apple Git-48)

