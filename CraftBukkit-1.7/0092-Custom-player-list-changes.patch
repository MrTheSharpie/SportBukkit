From d554b8c56f1a71fd31a5d8d9f07e4e8f761cafb9 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 20 Sep 2014 23:24:06 -0400
Subject: [PATCH] Custom player list changes


diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
index 5600407..2ee8cad 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
@@ -11,16 +11,18 @@ import java.io.IOException; // CraftBukkit
 
 public class PacketPlayOutNamedEntitySpawn extends Packet {
 
-    private int a;
-    public GameProfile b; // CraftBukkit - private -> public
-    private int c;
-    private int d;
-    private int e;
-    private byte f;
-    private byte g;
-    private int h;
-    private DataWatcher i;
-    private List j;
+    // CraftBukkit start - private -> public
+    public int a; // Entity ID
+    public GameProfile b;
+    public int c; // X
+    public int d; // Y
+    public int e; // Z
+    public byte f; // yaw
+    public byte g; // pitch
+    public int h; // held item ID
+    public DataWatcher i;
+    public List j;
+    // CraftBukkit end
 
     public PacketPlayOutNamedEntitySpawn() {}
 
@@ -94,7 +96,7 @@ public class PacketPlayOutNamedEntitySpawn extends Packet {
         packetdataserializer.writeByte(this.f);
         packetdataserializer.writeByte(this.g);
         packetdataserializer.writeShort(this.h);
-        this.i.a(packetdataserializer);
+        this.i.a(packetdataserializer, packetdataserializer.version);
     }
 
     public void a(PacketPlayOutListener packetplayoutlistener) {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index 4858f0e..5405c4b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -6,23 +6,55 @@ import net.minecraft.util.com.mojang.authlib.properties.Property;
 import net.minecraft.util.com.mojang.authlib.properties.PropertyMap;
 import org.bukkit.craftbukkit.util.CraftChatMessage;
 
+import java.io.IOException;
 import java.util.*;
 
 public class PacketPlayOutPlayerInfo extends Packet {
 
-    private static final int ADD_PLAYER = 0;
-    private static final int UPDATE_GAMEMODE = 1;
-    private static final int UPDATE_LATENCY = 2;
-    private static final int UPDATE_DISPLAY_NAME = 3;
-    private static final int REMOVE_PLAYER = 4;
+    // private -> public
+    public static final int ADD_PLAYER = 0;
+    public static final int UPDATE_GAMEMODE = 1;
+    public static final int UPDATE_LATENCY = 2;
+    public static final int UPDATE_DISPLAY_NAME = 3;
+    public static final int REMOVE_PLAYER = 4;
+
+    public static class Entry {
+        public UUID uuid;
+        public String name;
+        public String displayName;
+        public int gamemode;
+        public int ping;
+        public PropertyMap properties;
+
+        public Entry(UUID uuid, String name, String displayName, int gamemode, int ping, PropertyMap properties) {
+            this.uuid = uuid;
+            this.name = name;
+            this.displayName = displayName;
+            this.gamemode = gamemode;
+            this.ping = ping;
+            this.properties = properties;
+        }
+
+        public Entry(UUID uuid, String name) {
+            this.uuid = uuid;
+            this.name = name;
+        }
+
+        public static Entry withPing(UUID uuid, int ping) {
+            return new Entry(uuid, null, null, 0, ping, null);
+        }
+
+        public static Entry withGamemode(UUID uuid, int gamemode) {
+            return new Entry(uuid, null, null, gamemode, 0, null);
+        }
+
+        public static Entry withDisplayName(UUID uuid, String displayName) {
+            return new Entry(uuid, null, displayName, 0, 0, null);
+        }
+    }
 
     public int action;
-    public String name;
-    public String displayName;
-    public UUID uuid;
-    public int gamemode;
-    public int ping;
-    public PropertyMap properties;
+    public List<Entry> entries;
 
     public PacketPlayOutPlayerInfo() {}
 
@@ -37,18 +69,21 @@ public class PacketPlayOutPlayerInfo extends Packet {
     // CraftBukkit start
     public PacketPlayOutPlayerInfo(boolean add, UUID uuid, String name, String displayName, int ping, Map<String, String> properties) {
         this.action = add ? 0 : 4;
-        this.name = name;
-        this.displayName = displayName;
-        this.uuid = uuid;
-        this.gamemode = 0;
-        this.ping = ping;
 
-        this.properties = new PropertyMap();
+        PropertyMap propertyMap = new PropertyMap();
         if(properties != null) {
             for(Map.Entry<String, String> property : properties.entrySet()) {
-                this.properties.put(property.getKey(), new Property(property.getKey(), property.getValue()));
+                propertyMap.put(property.getKey(), new Property(property.getKey(), property.getValue()));
             }
         }
+
+        Entry entry = new Entry(uuid, name, displayName, 0, ping, propertyMap);
+        this.entries = Collections.singletonList(entry);
+    }
+
+    public PacketPlayOutPlayerInfo(int action, List<Entry> entries) {
+        this.action = action;
+        this.entries = entries;
     }
     // CraftBukkit end
 
@@ -76,12 +111,14 @@ public class PacketPlayOutPlayerInfo extends Packet {
         PacketPlayOutPlayerInfo packet = new PacketPlayOutPlayerInfo();
 
         packet.action = action;
-        packet.name = player.getName();
-        packet.displayName = player.listName;
-        packet.uuid = player.getProfile().getId();
-        packet.properties = player.getProfile().getProperties();
-        packet.ping = player.ping;
-        packet.gamemode = player.playerInteractManager.getGameMode().getId();
+        packet.entries = Collections.singletonList(new Entry(
+            player.getProfile().getId(),
+            player.listName,
+            ChatSerializer.a(CraftChatMessage.fromString(player.listName)[0]),
+            player.playerInteractManager.getGameMode().getId(),
+            player.ping,
+            player.getProfile().getProperties()
+        ));
 
         return packet;
     }
@@ -94,52 +131,59 @@ public class PacketPlayOutPlayerInfo extends Packet {
         if ( packetdataserializer.version >= 20 )
         {
             packetdataserializer.b( action );
-            packetdataserializer.b( 1 );
-            packetdataserializer.writeUUID( uuid );
-            switch ( action )
-            {
-                case ADD_PLAYER:
-                    packetdataserializer.a( name );
-                    packetdataserializer.b( properties.size() );
-                    for ( Property property : properties.values() )
-                    {
-                        packetdataserializer.a( property.getName() );
-                        packetdataserializer.a( property.getValue() );
-                        packetdataserializer.writeBoolean( property.hasSignature() );
-                        if ( property.hasSignature() )
+            packetdataserializer.b( this.entries.size() );
+
+            for(Entry entry : this.entries) {
+                packetdataserializer.writeUUID( entry.uuid );
+                switch ( action )
+                {
+                    case ADD_PLAYER:
+                        packetdataserializer.a( entry.name );
+                        packetdataserializer.b( entry.properties.size() );
+                        for ( Property property : entry.properties.values() )
                         {
-                            packetdataserializer.a( property.getSignature() );
+                            packetdataserializer.a( property.getName() );
+                            packetdataserializer.a( property.getValue() );
+                            packetdataserializer.writeBoolean( property.hasSignature() );
+                            if ( property.hasSignature() )
+                            {
+                                packetdataserializer.a( property.getSignature() );
+                            }
                         }
-                    }
-                    packetdataserializer.b( gamemode );
-                    packetdataserializer.b( ping );
-                    packetdataserializer.writeBoolean( displayName != null );
-                    if ( displayName != null )
-                    {
-                        packetdataserializer.a( ChatSerializer.a( CraftChatMessage.fromString( displayName )[0] ) );
-                    }
-                    break;
-                case UPDATE_GAMEMODE:
-                    packetdataserializer.b( gamemode );
-                    break;
-                case UPDATE_LATENCY:
-                    packetdataserializer.b( ping );
-                    break;
-                case UPDATE_DISPLAY_NAME:
-                    packetdataserializer.writeBoolean( displayName != null );
-                    if ( displayName != null )
-                    {
-                        packetdataserializer.a( ChatSerializer.a( CraftChatMessage.fromString( displayName )[0] ) );
-                    }
-                    break;
-                case REMOVE_PLAYER:
-                    break;
+                        packetdataserializer.b( entry.gamemode );
+                        packetdataserializer.b( entry.ping );
+                        packetdataserializer.writeBoolean( entry.displayName != null );
+                        if ( entry.displayName != null )
+                        {
+                            packetdataserializer.a(entry.displayName);
+                        }
+                        break;
+                    case UPDATE_GAMEMODE:
+                        packetdataserializer.b( entry.gamemode );
+                        break;
+                    case UPDATE_LATENCY:
+                        packetdataserializer.b( entry.ping );
+                        break;
+                    case UPDATE_DISPLAY_NAME:
+                        packetdataserializer.writeBoolean( entry.displayName != null );
+                        if ( entry.displayName != null )
+                        {
+                            packetdataserializer.a(entry.displayName);
+                        }
+                        break;
+                    case REMOVE_PLAYER:
+                        break;
 
+                }
             }
         } else {
-            packetdataserializer.a( displayName );
+            if(this.entries.size() != 1) {
+                throw new IOException("Cannot send multiple player list items in a single packet to 1.7 client");
+            }
+            Entry entry = this.entries.get(0);
+            packetdataserializer.a( entry.name );
             packetdataserializer.writeBoolean( action != REMOVE_PLAYER );
-            packetdataserializer.writeShort( ping );
+            packetdataserializer.writeShort( entry.ping );
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 8246bfd..6baae0c 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -910,21 +910,27 @@ public class PlayerConnection implements PacketPlayInListener {
             Player viewer = this.getPlayer();
             if (viewer != null) {
                 PacketPlayOutPlayerInfo infoPacket = (PacketPlayOutPlayerInfo) packet;
-                Player player = this.server.getPlayerExact(infoPacket.name);
-                if(player != null) {
-                    String fakeName = player.getFakeName(viewer);
-                    if(fakeName != null) {
-                        infoPacket.name = fakeName;
-                        infoPacket.displayName = fakeName;
-                    }
+                if(this.networkManager.getVersion() < 20 || infoPacket.action == 0) {
+                    for(PacketPlayOutPlayerInfo.Entry entry : infoPacket.entries) {
+                        if(entry.name != null) {
+                            Player player = this.server.getPlayerExact(entry.name);
+                            if(player != null) {
+                                String fakeName = player.getFakeName(viewer);
+                                if(fakeName != null) {
+                                    entry.name = fakeName;
+                                    entry.displayName = fakeName;
+                                }
 
-                    if(this.networkManager.getVersion() >= 20 && infoPacket.action == 0) {
-                        Skin fakeSkin = player.getFakeSkin(viewer);
-                        if(fakeSkin != null) {
-                            PropertyMap properties = new PropertyMap();
-                            properties.putAll(infoPacket.properties);
-                            Skins.setProperties(fakeSkin, properties);
-                            infoPacket.properties = properties;
+                                if(this.networkManager.getVersion() >= 20 && infoPacket.action == 0) {
+                                    Skin fakeSkin = player.getFakeSkin(viewer);
+                                    if(fakeSkin != null) {
+                                        PropertyMap properties = new PropertyMap();
+                                        properties.putAll(entry.properties);
+                                        Skins.setProperties(fakeSkin, properties);
+                                        entry.properties = properties;
+                                    }
+                                }
+                            }
                         }
                     }
                 }
-- 
1.8.5.1

