From d94b28b0de7b775a431b69972dae3c2fb21587da Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 21 Aug 2014 02:22:28 -0400
Subject: [PATCH] Remove legacy methods


diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index a5d097b..49073a8 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -105,21 +105,6 @@ public final class Bukkit {
     }
 
     /**
-     * Gets an array copy of all currently logged in players.
-     * <p>
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @deprecated superseded by {@link #getOnlinePlayers()}
-     * @return an array of Players that are currently online
-     */
-    @Deprecated
-    public static Player[] _INVALID_getOnlinePlayers() {
-        return server._INVALID_getOnlinePlayers();
-    }
-
-    /**
      * Gets a view of all currently logged in players. This {@linkplain
      * Collections#unmodifiableCollection(Collection) view} is a reused
      * object, making some operations like {@link Collection#size()}
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 81f2635..b88e722 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -85,19 +85,6 @@ public interface Server extends PluginMessageRecipient {
     public String getBukkitVersion();
 
     /**
-     * Gets an array copy of all currently logged in players.
-     * <p>
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @deprecated superseded by {@link #getOnlinePlayers()}
-     * @return an array of Players that are currently online
-     */
-    @Deprecated
-    public Player[] _INVALID_getOnlinePlayers();
-
-    /**
      * Gets a view of all currently logged in players. This {@linkplain
      * Collections#unmodifiableCollection(Collection) view} is a reused
      * object, making some operations like {@link Collection#size()}
diff --git a/src/main/java/org/bukkit/entity/Damageable.java b/src/main/java/org/bukkit/entity/Damageable.java
index d0599cf..ded9250 100644
--- a/src/main/java/org/bukkit/entity/Damageable.java
+++ b/src/main/java/org/bukkit/entity/Damageable.java
@@ -12,16 +12,6 @@ public interface Damageable extends Entity {
     void damage(double amount);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @param amount Amount of damage to deal
-     */
-    @Deprecated
-    void _INVALID_damage(int amount);
-
-    /**
      * Deals the given amount of damage to this entity, from a specified
      * entity.
      *
@@ -31,17 +21,6 @@ public interface Damageable extends Entity {
     void damage(double amount, Entity source);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @param amount Amount of damage to deal
-     * @param source Entity which to attribute this damage from
-     */
-    @Deprecated
-    void _INVALID_damage(int amount, Entity source);
-
-    /**
      * Gets the entity's health from 0 to {@link #getMaxHealth()}, where 0 is dead.
      *
      * @return Health represented from 0 to max
@@ -49,16 +28,6 @@ public interface Damageable extends Entity {
     double getHealth();
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return Health represented from 0 to max
-     */
-    @Deprecated
-    int _INVALID_getHealth();
-
-    /**
      * Sets the entity's health from 0 to {@link #getMaxHealth()}, where 0 is
      * dead.
      *
@@ -69,18 +38,6 @@ public interface Damageable extends Entity {
     void setHealth(double health);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @param health New health represented from 0 to max
-     * @throws IllegalArgumentException Thrown if the health is {@literal < 0 or >}
-     *     {@link #getMaxHealth()}
-     */
-    @Deprecated
-    void _INVALID_setHealth(int health);
-
-    /**
      * Gets the maximum health this entity has.
      *
      * @return Maximum health
@@ -88,16 +45,6 @@ public interface Damageable extends Entity {
     double getMaxHealth();
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return Maximum health
-     */
-    @Deprecated
-    int _INVALID_getMaxHealth();
-
-    /**
      * Sets the maximum health this entity can have.
      * <p>
      * If the health of the entity is above the value provided it will be set
@@ -111,16 +58,6 @@ public interface Damageable extends Entity {
     void setMaxHealth(double health);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @param health amount of health to set the maximum to
-     */
-    @Deprecated
-    void _INVALID_setMaxHealth(int health);
-
-    /**
      * Resets the max health to the original amount.
      */
     void resetMaxHealth();
diff --git a/src/main/java/org/bukkit/entity/LivingEntity.java b/src/main/java/org/bukkit/entity/LivingEntity.java
index 9103882..4b0c7a0 100644
--- a/src/main/java/org/bukkit/entity/LivingEntity.java
+++ b/src/main/java/org/bukkit/entity/LivingEntity.java
@@ -171,16 +171,6 @@ public interface LivingEntity extends Entity, Damageable, ProjectileSource {
     public double getLastDamage();
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return damage taken since the last no damage ticks time period
-     */
-    @Deprecated
-    public int _INVALID_getLastDamage();
-
-    /**
      * Sets the damage dealt within the current no damage ticks time period.
      *
      * @param damage amount of damage
@@ -188,16 +178,6 @@ public interface LivingEntity extends Entity, Damageable, ProjectileSource {
     public void setLastDamage(double damage);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @param damage amount of damage
-     */
-    @Deprecated
-    public void _INVALID_setLastDamage(int damage);
-
-    /**
      * Returns the living entity's current no damage ticks.
      *
      * @return amount of no damage ticks
diff --git a/src/main/java/org/bukkit/entity/Minecart.java b/src/main/java/org/bukkit/entity/Minecart.java
index ea64114..904d84c 100644
--- a/src/main/java/org/bukkit/entity/Minecart.java
+++ b/src/main/java/org/bukkit/entity/Minecart.java
@@ -10,16 +10,6 @@ import org.bukkit.util.Vector;
 public interface Minecart extends Vehicle {
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @param damage over 40 to "kill" a minecart
-     */
-    @Deprecated
-    public void _INVALID_setDamage(int damage);
-
-    /**
      * Sets a minecart's damage.
      *
      * @param damage over 40 to "kill" a minecart
@@ -27,16 +17,6 @@ public interface Minecart extends Vehicle {
     public void setDamage(double damage);
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @return The damage
-     */
-    @Deprecated
-    public int _INVALID_getDamage();
-
-    /**
      * Gets a minecart's damage.
      *
      * @return The damage
diff --git a/src/main/java/org/bukkit/entity/Projectile.java b/src/main/java/org/bukkit/entity/Projectile.java
index a5599fa..4ab2332 100644
--- a/src/main/java/org/bukkit/entity/Projectile.java
+++ b/src/main/java/org/bukkit/entity/Projectile.java
@@ -8,16 +8,6 @@ import org.bukkit.projectiles.ProjectileSource;
 public interface Projectile extends Entity {
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @return the {@link LivingEntity} that shot this projectile
-     */
-    @Deprecated
-    public LivingEntity _INVALID_getShooter();
-
-    /**
      * Retrieve the shooter of this projectile.
      *
      * @return the {@link ProjectileSource} that shot this projectile
@@ -25,16 +15,6 @@ public interface Projectile extends Entity {
     public ProjectileSource getShooter();
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     *
-     * @param shooter the {@link LivingEntity} that shot this projectile
-     */
-    @Deprecated
-    public void _INVALID_setShooter(LivingEntity shooter);
-
-    /**
      * Set the shooter of this projectile.
      *
      * @param source the {@link ProjectileSource} that shot this projectile
diff --git a/src/main/java/org/bukkit/event/entity/EntityDamageEvent.java b/src/main/java/org/bukkit/event/entity/EntityDamageEvent.java
index 9ef48c8..5fa76ff 100644
--- a/src/main/java/org/bukkit/event/entity/EntityDamageEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityDamageEvent.java
@@ -150,18 +150,6 @@ public class EntityDamageEvent extends EntityEvent implements Cancellable {
     }
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return the (rounded) damage
-     */
-    @Deprecated
-    public int _INVALID_getDamage() {
-        return NumberConversions.ceil(getDamage());
-    }
-
-    /**
      * Sets the raw amount of damage caused by the event.
      * <p>
      * For compatibility this also recalculates the modifiers and scales
@@ -199,18 +187,6 @@ public class EntityDamageEvent extends EntityEvent implements Cancellable {
     }
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @param damage the new damage value
-     */
-    @Deprecated
-    public void _INVALID_setDamage(int damage) {
-        setDamage(damage);
-    }
-
-    /**
      * Gets the cause of the damage.
      *
      * @return A DamageCause value detailing the cause of the damage.
diff --git a/src/main/java/org/bukkit/event/entity/EntityRegainHealthEvent.java b/src/main/java/org/bukkit/event/entity/EntityRegainHealthEvent.java
index a7b3517..e4e8ea4 100644
--- a/src/main/java/org/bukkit/event/entity/EntityRegainHealthEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityRegainHealthEvent.java
@@ -35,18 +35,6 @@ public class EntityRegainHealthEvent extends EntityEvent implements Cancellable
     }
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return the (rounded) amount regained
-     */
-    @Deprecated
-    public int _INVALID_getAmount() {
-        return NumberConversions.ceil(getAmount());
-    }
-
-    /**
      * Sets the amount of regained health
      *
      * @param amount the amount of health the entity will regain
@@ -55,18 +43,6 @@ public class EntityRegainHealthEvent extends EntityEvent implements Cancellable
         this.amount = amount;
     }
 
-    /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @param amount the amount that will be regained
-     */
-    @Deprecated
-    public void _INVALID_setAmount(int amount) {
-        setAmount(amount);
-    }
-
     @Override
     public boolean isCancelled() {
         return cancelled;
diff --git a/src/main/java/org/bukkit/event/vehicle/VehicleDamageEvent.java b/src/main/java/org/bukkit/event/vehicle/VehicleDamageEvent.java
index c7b9c1a..acfa829 100644
--- a/src/main/java/org/bukkit/event/vehicle/VehicleDamageEvent.java
+++ b/src/main/java/org/bukkit/event/vehicle/VehicleDamageEvent.java
@@ -45,18 +45,6 @@ public class VehicleDamageEvent extends VehicleEvent implements Cancellable {
     }
 
     /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @return the damage
-     */
-    @Deprecated
-    public int _INVALID_getDamage() {
-        return NumberConversions.ceil(getDamage());
-    }
-
-    /**
      * Sets the damage done to the vehicle
      *
      * @param damage The damage
@@ -65,18 +53,6 @@ public class VehicleDamageEvent extends VehicleEvent implements Cancellable {
         this.damage = damage;
     }
 
-    /**
-     * This method exists for legacy reasons to provide backwards
-     * compatibility. It will not exist at runtime and should not be used
-     * under any circumstances.
-     * 
-     * @param damage the damage
-     */
-    @Deprecated
-    public void _INVALID_setDamage(int damage) {
-        setDamage(damage);
-    }
-
     public boolean isCancelled() {
         return cancelled;
     }
-- 
1.9.0

